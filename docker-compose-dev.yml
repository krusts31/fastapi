version: '2.4'

services:
  backend:
    restart: always
    hostname: backend
    depends_on:
      postgres:
        condition: service_healthy
      weaviate:
        condition: service_started
      t2v-transformers:
        condition: service_started
    networks:
      - unvolt_dev_net
    ports:
      - ${BACKEND_PORT}:9001
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./backend/app:/var/www/backend/app/:delegated
    environment:
      ENV:             ${BACKEND_ENV}

  postgres:
    image: postgres:12.14
    restart: always
    hostname: postgres
    #    build:
    #      context: ./postgres
    #      dockerfile: Dockerfile
    volumes:
      - ./postgres_vol/:/var/lib/postgresql/data:delegated
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - unvolt_dev_net
    environment:
      POSTGRES_PASSWORD:    ${POSTGRES_PASSWORD}
      POSTGRES_USER:        ${POSTGRES_USER}
      POSTGRES_DB:          ${POSTGRES_DB}
      PGDATA:               /var/lib/postgresql/data
    healthcheck:
      #test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 3s

networks:
  unvolt_dev_net:
    driver: bridge
    name: unvolt_dev_net
